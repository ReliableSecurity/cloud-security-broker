#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Simple integration test for CASB system
–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã CASB
"""

import os
import sys
import tempfile
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_basic_functionality():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ CASB —Å–∏—Å—Ç–µ–º—ã...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    fd, temp_db = tempfile.mkstemp(suffix='.db')
    os.close(fd)
    
    try:
        # 1. –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
        print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
        from core.casb import CASBCore, AccessLevel, CloudProvider, ThreatLevel
        from auth.mfa_auth import MFAAuthenticator  
        from monitoring.cloud_monitor import CloudActivityMonitor, EventType, Severity
        from utils.error_handler import ErrorHandler
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config = {
            'database': temp_db,
            'jwt_secret': 'test_integration_secret',
            'session_timeout': 3600,
            'max_failed_attempts': 5,
            'threat_threshold': 0.7
        }
        
        # –°–æ–∑–¥–∞–µ–º CASB Core —Å –ø–∞—Ç—á–µ–º
        from unittest.mock import patch
        with patch('core.casb.CASBCore._load_config', return_value=config):
            casb = CASBCore()
            casb.db_path = temp_db
            casb.config = config
            casb._init_database()
        
        mfa = MFAAuthenticator(temp_db)
        monitor = CloudActivityMonitor(temp_db)
        error_handler = ErrorHandler()
        
        print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # 3. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("üë§ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        user = casb.create_user(
            username="test_integration_user",
            email="test@casb-integration.com",
            department="IT",
            access_level=AccessLevel.ADMIN,
            password="SecurePassword123!"
        )
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user.username} (ID: {user.user_id})")
        
        # 4. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞
        print("‚òÅÔ∏è –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±–ª–∞—á–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞...")
        service = casb.register_cloud_service(
            name="Integration Test Service",
            provider=CloudProvider.AWS,
            endpoint="https://test.amazonaws.com",
            api_key="integration_test_key",
            service_type="compute",
            risk_level=ThreatLevel.MEDIUM
        )
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {service.name} (ID: {service.service_id})")
        
        # 5. –¢–µ—Å—Ç MFA
        print("üîê –¢–µ—Å—Ç –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
        secret, qr_code = mfa.setup_totp(user.user_id, user.username)
        print(f"‚úÖ TOTP –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Å–µ–∫—Ä–µ—Ç –¥–ª–∏–Ω–æ–π: {len(secret)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # 6. –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–æ—Å—Ç—É–ø–∞
        print("üîë –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–æ—Å—Ç—É–ø–∞...")
        access_request = casb.request_access(
            user_id=user.user_id,
            service_id=service.service_id,
            action="test_integration_action",
            ip_address="192.168.1.100",
            user_agent="integration-test-agent"
        )
        print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ —Å–æ–∑–¥–∞–Ω —Å —Ä–∏—Å–∫-—Å–∫–æ—Ä–æ–º: {access_request.risk_score:.2f}")
        
        # 7. –¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        print("üìä –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
        event = monitor.log_cloud_event(
            service_id=service.service_id,
            user_id=user.user_id,
            event_type=EventType.API_CALL,
            source_ip="192.168.1.100",
            user_agent="integration-test",
            resource="/api/integration/test",
            action="integration_test",
            result="success"
        )
        print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: {event.event_id}")
        
        # 8. –¢–µ—Å—Ç –º–µ—Ç—Ä–∏–∫
        print("üìà –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫...")
        casb_metrics = casb.get_dashboard_metrics()
        monitor_metrics = monitor.get_activity_dashboard(hours=1)
        print(f"‚úÖ CASB –º–µ—Ç—Ä–∏–∫–∏: {casb_metrics['summary']['active_users']} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print(f"‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç—Ä–∏–∫–∏: {monitor_metrics['summary']['total_events']} —Å–æ–±—ã—Ç–∏–π")
        
        # 9. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
        print("‚ö†Ô∏è –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫...")
        from utils.error_handler import ValidationError
        try:
            raise ValidationError("–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏", field="test_field", value="invalid_value")
        except ValidationError as e:
            error_detail = error_handler.handle_error(e, context={'test_integration': True})
            print(f"‚úÖ –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å ID: {error_detail.error_id}")
        
        # 10. –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        print("üîí –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        token = casb.authenticate_user("test_integration_user", "SecurePassword123!", "192.168.1.100")
        if token:
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
            validated_user_id = casb.validate_session_token(token)
            if validated_user_id == user.user_id:
                print("‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        
        # 11. –¢–µ—Å—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
        print("üîê –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è...")
        sensitive_data = "sensitive_integration_test_data_12345"
        encrypted = casb.encrypt_data(sensitive_data)
        decrypted = casb.decrypt_data(encrypted)
        
        if decrypted == sensitive_data:
            print("‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ/—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è")
        
        print("\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1")
        print(f"   ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: 1") 
        print(f"   ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ—Å—Ç—É–ø–∞: 1")
        print(f"   ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–±—ã—Ç–∏–π: 1")
        print(f"   ‚Ä¢ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {datetime.now()}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            if 'monitor' in locals():
                monitor.stop_monitoring()
            os.unlink(temp_db)
        except:
            pass


def test_security_features():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print("\nüîí –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    
    from utils.error_handler import (
        AuthenticationError, 
        AuthorizationError,
        ValidationError,
        SecurityError
    )
    
    # –¢–µ—Å—Ç –∫–ª–∞—Å—Å–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    try:
        raise AuthenticationError("–¢–µ—Å—Ç –æ—à–∏–±–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    except SecurityError as e:
        print(f"‚úÖ AuthenticationError —Ä–∞–±–æ—Ç–∞–µ—Ç: {e.message}")
    
    try:
        raise AuthorizationError("–¢–µ—Å—Ç –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    except SecurityError as e:
        print(f"‚úÖ AuthorizationError —Ä–∞–±–æ—Ç–∞–µ—Ç: {e.message}")
    
    print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã")


if __name__ == "__main__":
    print("=" * 80)
    print("üõ°Ô∏è  CASB SECURITY SYSTEM - INTEGRATION TEST")
    print("=" * 80)
    
    success = test_basic_functionality()
    test_security_features()
    
    if success:
        print("\nüéØ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é")
        sys.exit(0)
    else:
        print("\n‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫")
        sys.exit(1)