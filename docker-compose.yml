version: '3.8'

services:
  # Основной CASB сервис
  casb-app:
    build: .
    container_name: casb-security
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "5000:5000"
      - "9090:9090"
    volumes:
      - casb_data:/app/data
      - casb_logs:/app/logs
      - casb_ssl:/app/ssl
      - casb_backup:/app/backup
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - FLASK_ENV=production
      - CASB_CONFIG_PATH=/app/config.yaml
      - PYTHONPATH=/app
    depends_on:
      - redis
      - postgres
    networks:
      - casb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    container_name: casb-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass "redis-password-change-me"
    networks:
      - casb-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL для продакшн данных (опционально)
  postgres:
    image: postgres:15-alpine
    container_name: casb-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: casb_db
      POSTGRES_USER: casb_user
      POSTGRES_PASSWORD: secure_password_change_me
      POSTGRES_INITDB_ARGS: "--locale=ru_RU.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - casb-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U casb_user -d casb_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana для мониторинга (опционально)
  grafana:
    image: grafana/grafana:latest
    container_name: casb-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password_change_me
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - casb-network
    depends_on:
      - prometheus

  # Prometheus для метрик (опционально)
  prometheus:
    image: prom/prometheus:latest
    container_name: casb-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - casb-network

  # Elasticsearch для логов (опционально)
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: casb-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - casb-network
    profiles:
      - elk

  # Kibana для анализа логов (опционально)
  kibana:
    image: kibana:8.11.0
    container_name: casb-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - casb-network
    profiles:
      - elk

  # Filebeat для сбора логов (опционально)
  filebeat:
    image: elastic/filebeat:8.11.0
    container_name: casb-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - casb_logs:/app/logs:ro
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
    networks:
      - casb-network
    profiles:
      - elk

  # Nginx reverse proxy (альтернативная конфигурация)
  nginx-proxy:
    image: nginx:alpine
    container_name: casb-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - casb_ssl:/etc/ssl:ro
    depends_on:
      - casb-app
    networks:
      - casb-network
    profiles:
      - proxy

# Volumes для постоянного хранения данных
volumes:
  casb_data:
    driver: local
  casb_logs:
    driver: local
  casb_ssl:
    driver: local
  casb_backup:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
  elasticsearch_data:
    driver: local

# Сеть для изоляции сервисов
networks:
  casb-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
